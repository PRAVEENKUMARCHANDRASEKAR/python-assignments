{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "s python .ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PTMuPJ2gn71w",
        "colab_type": "text"
      },
      "source": [
        "##DAY5 ASSIGNMENT 1\n",
        " \n",
        "\n",
        "SORT INCREASING ORDER BUT ALL ZERIS SHOULD BE AT RIGHT HAND SIDE\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rH7iuTCfpCz5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "list=[0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lP16LpH_pC4t",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "41943cf4-e6ce-4e2b-db21-055cadccdae4"
      },
      "source": [
        "list=[0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]\n",
        "list.sort()\n",
        "print(list)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 4, 4, 10, 56, 56]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TXfj518zse8r",
        "colab_type": "text"
      },
      "source": [
        "## ASSIGNMENT 2\n",
        "\n",
        "MERGE THE TWO SORTED LIST TO PRODUCE ONE SORTED LIST"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YYmnoAdDvsjb",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "2022a2f7-0b79-436a-d279-f7ad0b9c3e70"
      },
      "source": [
        "test_list1 = [10,20,40,60,70,80] \n",
        "test_list2 = [5,15,25,35,45,60] \n",
        "  \n",
        "# printing original lists  \n",
        "print (\"The original list 1 is : \" + str(test_list1)) \n",
        "print (\"The original list 2 is : \" + str(test_list2)) \n",
        "  \n",
        "# using naive method  \n",
        "# to combine two sorted lists \n",
        "size_1 = len(test_list1) \n",
        "size_2 = len(test_list2) \n",
        "  \n",
        "res = [] \n",
        "i, j = 0, 0\n",
        "  \n",
        "while i < size_1 and j < size_2: \n",
        "    if test_list1[i] < test_list2[j]: \n",
        "      res.append(test_list1[i]) \n",
        "      i += 1\n",
        "  \n",
        "    else: \n",
        "      res.append(test_list2[j]) \n",
        "      j += 1\n",
        "  \n",
        "res = res + test_list1[i:] + test_list2[j:] \n",
        "  \n",
        "# printing result \n",
        "print (\"The combined sorted list is : \" + str(res)) \n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "The original list 1 is : [10, 20, 40, 60, 70, 80]\n",
            "The original list 2 is : [5, 15, 25, 35, 45, 60]\n",
            "The combined sorted list is : [5, 10, 15, 20, 25, 35, 40, 45, 60, 60, 70, 80]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XQeqGvWhwKIl",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}